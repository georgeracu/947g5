version: "~> 1.0"

jobs:
  include:
  - stage: Tests
    if: type = pull_request
    name: NodeJS tests
    language: node_js
    os: linux
    dist: xenial
    node_js: 10.13.0
    env:
    - JOB_NAME=TEST_NODEJS
    install:
    - npm install
    script:
    - npm test
  - stage: Tests
    if: type = pull_request
    name: Android tests
    language: android
    dist: xenial
    jdk: oraclejdk8
    env:
    - JOB_NAME=TEST_ANDROID
    before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    cache:
      npm: true
      directories:
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
      - node_modules
    android:
      components:
      - tools
      - platform-tools
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
      - build-tools-28.0.3
      - android-29
      - sys-img-armeabi-v7a-android-29
      licenses:
      - android-sdk-preview-license-.+
      - android-sdk-license-.+
      - google-gdk-license-.+
    before_install:
    - openssl aes-256-cbc -K $encrypted_b5811d19e6fa_key -iv $encrypted_b5811d19e6fa_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - cp infra/secrets/beta/google-services.json android/app
    - cp infra/secrets/beta/newagent-55cc5-063ad922bb70.json android
    - nvm install 10.13.0
    - node --version
    - chmod +x ./android/gradlew
    - yes | sdkmanager "platforms;android-28"
    - yes | sdkmanager "ndk-bundle"
    install:
    - npm install
    - npm install -g firebase-tools@7.7.0
    before_script:
    - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
    script:
    - npx jetify
    - cd android
    - bundle install
    - bundle exec fastlane install_plugins
    - bundle exec fastlane android tests
  - stage: Tests
    if: type = pull_request
    name: iOS tests
    language: objective-c
    os: osx
    osx_image: xcode11
    xcode_project: MyAwesomeApp.xcodeproj
    xcode_scheme: MyAwesomeApp
    env:
    - JOB_NAME=TEST_iOS
    before_install:
    - nvm install 10.13.0
    - node --version
    install:
    - npm install
    - npm install -g react-native-cli@2.0.1
    - npm install -g firebase-tools@7.7.0
    - gem install cocoapods -v 1.8.4
    script:
    - cd ios
    - rm -rf Podfile.lock
    - pod install
    - cd ..
    - react-native link
    - cd ios
    - bundle install
    - bundle exec fastlane ios tests
  - stage: Get latest changes to beta-release
    if: (branch = master) AND (type = push)
    name: Merge master to beta-release
    language: node_js
    os: linux
    dist: xenial
    node_js: 10.13.0
    env:
      - JOB_NAME=BETA_PATCH_VERSION
    install:
      - npm install
    script:
      - npm test
      - ./prepare-release merge-master-to-beta-branch
  - stage: Version patch
    if: (branch = beta-release) AND (env(BETA_PATCH) = true)
    name: Version patch on beta-release
    language: node_js
    os: linux
    dist: xenial
    node_js: 10.13.0
    env:
    - JOB_NAME=BETA_PATCH_VERSION
    install:
    - npm install
    script:
    - npm test
    - ./prepare-release beta-patch-version
  - stage: Beta release
    if: (branch = env(BETA_RELEASE_BRANCH)) AND (env(BETA_RELEASE) = true)
    name: Android Beta release
    language: android
    jdk: oraclejdk8
    env:
    - JOB_NAME=BETA_RELEASE_ANDROID
    before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    cache:
      npm: true
      directories:
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
      - node_modules
    android:
      components:
      - tools
      - platform-tools
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
      - build-tools-28.0.3
      - android-29
      - sys-img-armeabi-v7a-android-29
      licenses:
      - android-sdk-preview-license-.+
      - android-sdk-license-.+
      - google-gdk-license-.+
    before_install:
    - openssl aes-256-cbc -K $encrypted_b5811d19e6fa_key -iv $encrypted_b5811d19e6fa_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - cp infra/secrets/beta/google-services.json android/app
    - cp infra/secrets/beta/newagent-55cc5-063ad922bb70.json android
    - nvm install 10.13.0
    - node --version
    - chmod +x ./android/gradlew
    - yes | sdkmanager "platforms;android-28"
    - yes | sdkmanager "ndk-bundle"
    install:
    - npm install
    - npm install -g firebase-tools@7.7.0
    before_script:
    - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
    script:
    - npx jetify
    - cd android
    - bundle install
    - bundle exec fastlane install_plugins
    - bundle exec fastlane android beta
  - stage: Master release
    if: (branch = master) AND (type != push) AND (env(MASTER_RELEASE) = true)
    name: Android release
    language: android
    env:
    - JOB_NAME=MASTER_RELEASE_ANDROID
    jdk: oraclejdk8
    before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    cache:
      npm: true
      directories:
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
      - node_modules
    android:
      components:
      - tools
      - platform-tools
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
      - build-tools-28.0.3
      - android-29
      - sys-img-armeabi-v7a-android-29
      licenses:
      - android-sdk-preview-license-.+
      - android-sdk-license-.+
      - google-gdk-license-.+
    before_install:
    - openssl aes-256-cbc -K $encrypted_b5811d19e6fa_key -iv $encrypted_b5811d19e6fa_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - cp infra/secrets/beta/google-services.json android/app
    - cp infra/secrets/beta/newagent-55cc5-063ad922bb70.json android
    - nvm install 10.13.0
    - node --version
    - chmod +x ./android/gradlew
    - yes | sdkmanager "platforms;android-28"
    - yes | sdkmanager "ndk-bundle"
    install:
    - npm install
    - npm install -g firebase-tools@7.7.0
    before_script:
    - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
    script:
    - npx jetify
    - cd android
    - bundle install
    - bundle exec fastlane install_plugins
    - bundle exec fastlane android release
