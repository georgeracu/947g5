#!/bin/bash

set -eu -o pipefail

PROGRAM_NAME=$0

function checkout-branch() {
  git remote set-url origin https://${GITHUB_TOKEN}@github.com/georgeracu/947g5.git
  git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
  git fetch --all
  git checkout $BETA_RELEASE_BRANCH
}

function merge-master-to-beta-branch() {
  checkout-branch
  git merge master --strategy-option theirs --commit
  git push origin $BETA_RELEASE_BRANCH 2>&1
}

function beta-patch-version() {
  checkout-branch
  npm version patch --no-git-tag-version --allow-same-version
  git add package.json
  git add package-lock.json
  git commit -m "Setting version to $(jq -r '.version' package.json) via Travis CI"
  git push origin $BETA_RELEASE_BRANCH 2>&1
}

function usage {
    echo ""
    echo "Example usage: $PROGRAM_NAME [command]"
    echo ""
    echo "Available commands"
    echo "  beta-patch-version            Will version bump patch on beta release"
    echo "  merge-master-to-beta-branch   Will merge master to beta by accepting changes from master, will commit and push"
    echo ""
    exit 1
}

CMD=${1:-}
shift || true
case ${CMD} in
  beta-patch-version) beta-patch-version;;
  merge-master-to-beta-branch) merge-master-to-beta-branch;;
  *) usage ;;
esac
